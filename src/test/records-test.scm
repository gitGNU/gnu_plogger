(import (class org.junit Test))
(import (class org.junit Assert))
(import (plogger records))

(define-simple-class all-record-types-test ()
  
  ((test-project-record) ::void (@Test)
   (let* ((id "PID")
	  (name "Project Name")
	  (alist (list (cons 'project-id id)
		       (cons 'project-name name)))
	  (project-a (make-project id name))
	  (project-b (alist->project alist)))
     (Assert:assertTrue (project? project-a))
     (Assert:assertEquals id (project-id project-a))
     (Assert:assertEquals name (project-name project-a))
     (Assert:assertTrue (equal? alist (project->alist project-a)))
     (Assert:assertTrue (equal? alist (project->alist project-b)))))

  ((test-task-record) ::void (@Test)
   (let* ((id "TID")
	  (name "Task Name")
	  (desc "Task Description")
	  (alist (list (cons 'task-id id)
		       (cons 'task-name name)
		       (cons 'task-desc desc)))
	  (task-a (make-task id name desc))
	  (task-b (alist->task alist)))
     (Assert:assertTrue (task? task-a))
     (Assert:assertEquals id (task-id task-a))
     (Assert:assertEquals name (task-name task-a))
     (Assert:assertEquals desc (task-desc task-a))
     (Assert:assertTrue (equal? alist (task->alist task-a)))
     (Assert:assertTrue (equal? alist (task->alist task-b)))))

  )
